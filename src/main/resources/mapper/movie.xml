<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.film.mapper.MovieMapper">

	
	<insert id="updateList" parameterType="java.util.List">
		insert into filmbox_movie
		(rank,movieCd,movieNm,openDt,audiAcc,image,update_date,starpoint)
		values
		<foreach item="item" index="index" collection="list" separator=" , ">
		  (#{item.rank}, #{item.movieCd}, #{item.movieNm}, 
			#{item.openDt}, #{item.audiAcc}, #{item.image}
			,now(), 0)
		</foreach>
	   ON DUPLICATE KEY UPDATE <!-- pk가 중복이면 update할 구문 (아래) -->
	   rank = values(rank) , audiAcc = values(audiAcc), update_date = now()
	 </insert>

	<select id="getMovieList" resultType="com.film.dto.MovieDTO">
		select rank, movieCd, movieNm, openDt, audiAcc, image, starpoint
		from filmbox_movie
		order by update_date desc, rank*1
		Limit 10
	</select>
	
	
	<select id="getMovie" parameterType="string" resultType="com.film.dto.MovieDTO">
		select rank, movieCd, movieNm, openDt, audiAcc, image, update_date, starpoint
		from filmbox_movie
		where movieCd = #{movieCd}
	</select>
	
	<!-- 영화명 검색 -->
	<select id="getSearchMovieList" parameterType="string" resultType="com.film.dto.MovieDTO">
		select rank, movieCd, movieNm, openDt, audiAcc, image, update_date, starpoint
		from filmbox_movie
		where movieNm Like CONCAT('%',#{movieNm},'%')
		order by update_date desc, rank*1
	</select>
	
	<!-- 리뷰 작성될때마다 별점평균 바뀌는 DB 추가해야함-->
	<update id="avgStarpoint" parameterType="string">
		update filmbox_movie as m inner join
              (select movieCd, avg(review_starpoint) as revCount
		         from filmbox_review 
			    where movieCd = #{movieNm} )
        	as r
        on m.movieCd = r.movieCd
        set m.starpoint = revCount
        where m.movieCd = #{movieNm}
	</update> 
	
	
</mapper>
    
    