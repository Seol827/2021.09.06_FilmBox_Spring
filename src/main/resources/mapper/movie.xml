<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.film.mapper.MovieMapper">

<!-- 	<insert id="movieinsert" parameterType="java.util.List">
		insert into filmbox_movie
		(rank,movieCd,movieNm,openDt,audiAcc,image,update_date,starpoint)
		values
		<foreach item="item" index="index" collection="list"
			separator=" , ">
			(#{item.rank}, #{item.movieCd}, #{item.movieNm}, 
			#{item.openDt}, #{item.audiAcc}, #{item.image}
			,now(), 0)
		</foreach>
	</insert>

	<select id="updatedate" resultType="string">
		SELECT update_date FROM filmbox_movie
		WHERE rank=1;
	</select>
	
	<update id="movieupdate" parameterType="java.util.List">

		<foreach item="item" index="index" collection="list" separator=";">
			update filmbox_movie
			set
			where rank = #{item.rank},
			movieNm = #{item.movieNm},
			openDt = #{item.openDt},
			audiAcc = #{item.audiAcc},
			image = #{item.image},
			update_date = now()

			movieCd = #{item.movieCd},
		</foreach>
	</update> -->
	
	
	<insert id="updateList" parameterType="java.util.List">
		insert into filmbox_movie
		(rank,movieCd,movieNm,openDt,audiAcc,image,update_date,starpoint)
		values
		<foreach item="item" index="index" collection="list" separator=" , ">
		  (#{item.rank}, #{item.movieCd}, #{item.movieNm}, 
			#{item.openDt}, #{item.audiAcc}, #{item.image}
			,now(), 0)
		</foreach>
	   ON DUPLICATE KEY UPDATE <!-- pk가 중복이면 update할 구문 (아래) -->
	   rank = values(rank) , audiAcc = values(audiAcc), update_date = now()
	 </insert>

	<select id="getMovieList" resultType="com.film.dto.MovieDTO">
		select rank, movieCd, movieNm, openDt, audiAcc, image, starpoint
		from filmbox_movie
		order by update_date desc, rank*1
		Limit 10
	</select>
	
	
	<select id="getMovie" parameterType="string" resultType="com.film.dto.MovieDTO">
		select rank, movieCd, movieNm, openDt, audiAcc, image, update_date, starpoint
		from filmbox_movie
		where movieCd = #{movieCd}
	</select>
	
	<!-- 영화명 검색 -->
	<select id="getSearchMovieList" parameterType="string" resultType="com.film.dto.MovieDTO">
		select rank, movieCd, movieNm, openDt, audiAcc, image, update_date, starpoint
		from filmbox_movie
		where movieNm Like CONCAT('%',#{movieNm},'%')
		order by update_date desc, rank*1
	</select>
	
	<!-- 리뷰 작성될때마다 별점평균 바뀌는 DB 추가해야함-->
		
	<insert id="reserveinsert" parameterType="com.film.dto.KakaopayDTO">
    	<selectKey keyProperty="rev_no" resultType="int" order="AFTER">
       		SELECT LAST_INSERT_ID() 
    	</selectKey>
    	insert into filmbox_rev ( movieCd, rsv_date, price, rev_condition) 
    	values ( #{movieCd},now(), #{payMoney} ,0)
    </insert>
    <insert id="screeninsert" parameterType="com.film.dto.KakaopayDTO">
    	
    	insert into filmbox_screen (rev_no,show_date, show_time, seatno) 
    	
    	values (#{rev_no},#{reserveDate}, #{screenTime},#{selectedSeat})
    </insert>
</mapper>
    
    